NOTE: Requires Windows 10 Professional - If you have Windows 10 Home, the procedure can be modified to use Docker-Toolbox.

Reboot and open your BIOS settings (for Lenovo, typically F1 or F2 while booting)
	Security - Memory Protection
		Ensure Execution Protection is enabled
	Security - Virtualization
		Ensure Virtualization Tech is enabled
		Ensure VT-d is enabled
	F10 to save and reboot

Download and install Docker for Windows (Stable)
	https://docs.docker.com/docker-for-windows/install/#download-docker-for-windows
	Default Options
	If prompted, enable Hyper-V (requires restart)

Download and install JAVA 1.8 JDK for Windows
   Set Environment Variable for JAVA_HOME to the installed jdk

Download and install Git for Windows
    https://git-for-windows.github.io/
	"Use GIT from GitBash Only"
	"Checkout As-Is, Commit Unix"

Start -> Git Bash
    Verify docker and docker-compose are working:
		docker version
		docker-compose -version

Install GIT LFS
    git install lfs

On your system tray, right click on the docker option and select Settings
	Shared Drives - Select the drive you want to put ALM on and hit apply

Build and Start the Environment:
  Open Git Bash
	Clone the ALM and Devenv Repositories to your machine using either HTTPS, or SSH Keys added to Bitbucket
	cd ~/devenv
	./bootstrap.sh build

	If you get errors downloading the base docker images, see this FAQ entry:
	    https://docs.docker.com/docker-for-windows/troubleshoot/#networking-issues

	If you get errors about port 80 and access denied, see this possible explaination:
	    https://answers.microsoft.com/en-us/windows/forum/windows_10-networking/bug-system-process-system-and-compressed-memory/6df20c19-53b9-4b86-bccc-2b51c191b9d5

Open Notepad as Administrator
	Open c:\windows\system32\drivers\etc\hosts
	Add the following line to the end then save:
		127.0.0.1 dev.icam.local ldap.icam.local saml.icam.local

Point a browser to the following URL:
	https://dev.icam.local/alm/login.jsf?prompt=true
	To avoid certificate warnings, import alm/ICAM-HTTPD/dev.icam.local.cer into your browser as a trusted certificate
	Login is admin / Passw0rd
	If needed (try to avoid)   spadmin / Passw0rd123!

To rebuild, copy in new WAR (if needed) and run bootstrap.sh again...

Note: There is a bug being researched as of 9/1 in Docker for Windows that may
cause a "timeout" error from docker on Windows 10 when you reboot.  To work around
this, disable fast-boot on Windows.
See: https://github.com/docker/for-win/issues/927#issuecomment-325682523

Note: The time on your VM may drift - to check it on the app server, use this command:
    docker-compose exec app date

TODO: Ensure ALM is not exposed outside of the machine...if it is, reconfigure so it is not...
TODO: Rework so folder does not require being named devenv
